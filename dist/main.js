(()=>{"use strict";class e{constructor(e){this.name=e,this.arrayOfTodos=[]}}let t=[];function n(){document.querySelector(".projects").textContent="",t.forEach((e=>{let o=0,r=document.createElement("div");r.className="project",r.textContent=e.name;let c=document.createElement("button");c.classList.add("project__btn"),c.textContent="x",c.addEventListener("click",(()=>{var r;document.querySelector(".create-button").textContent="",r=e,t=t.filter((e=>e!==r)),localStorage.setItem("projects",JSON.stringify(t)),n(),document.querySelector(".content").textContent="",o=1})),r.addEventListener("click",(()=>{0==o&&a(e)})),r.appendChild(c),"Inbox"!==e.name&&document.querySelector(".projects").appendChild(r)}))}function o(){document.querySelector(".content").textContent="",document.querySelector(".create-button").textContent="";let e=document.createElement("div");e.className="today";let n=function(){let e=new Date,t=String(e.getDate()).padStart(2,"0"),n=String(e.getMonth()+1).padStart(2,"0"),o=e.getFullYear();return e=o+"-"+n+"-"+t,e}();c("Today"),t.forEach((e=>{for(let t in e.arrayOfTodos)e.arrayOfTodos[t]&&e.arrayOfTodos[t].date==n&&a(e,t)})),document.querySelector(".today").appendChild(e)}function r(){document.querySelector(".content").textContent="",document.querySelector(".create-button").textContent="";let e=document.createElement("div");e.className="upcoming";let n=new Date,o=String(n.getDate()).padStart(2,"0"),r=String(n.getMonth()+1).padStart(2,"0"),d=n.getFullYear();n=d+"/"+r+"/"+o,c("Upcoming");for(let e in t)for(let n=1;n<t[e].arrayOfTodos.length;n++)t[e].arrayOfTodos[n].date.substr(0,4)>d&&a(t[e],n,"upcoming"),t[e].arrayOfTodos[n].date.substr(0,4)==d&&t[e].arrayOfTodos[n].date.substr(5,2)>r&&a(t[e],n,"upcoming"),t[e].arrayOfTodos[n].date.substr(0,4)==d&&t[e].arrayOfTodos[n].date.substr(5,2)==r&&t[e].arrayOfTodos[n].date.substr(8,2)>o&&a(t[e],n,"upcoming");document.querySelector(".upcoming").appendChild(e)}function a(e,n,d){n||(document.querySelector(".content").textContent="",document.querySelector(".create-button").textContent="",c(e));for(let c=1;c<e.arrayOfTodos.length;c++){let l=document.createElement("div");l.className="task";let s=document.createElement("div");s.textContent="",s.className="checkbox",l.appendChild(s);let u=document.createElement("div");u.textContent=e.arrayOfTodos[c].name,u.className="taskname",l.appendChild(u);let i=document.createElement("div");i.textContent="Project: "+e.name,i.className="father-project",l.appendChild(i);let m=document.createElement("div");m.textContent=e.arrayOfTodos[c].description,m.className="description",l.appendChild(m),1==e.arrayOfTodos[c].priority&&(s.style.background="red"),2==e.arrayOfTodos[c].priority&&(s.style.background="orange"),3==e.arrayOfTodos[c].priority&&(s.style.background="yellow"),0==e.arrayOfTodos[c].priority&&(s.style.background="white"),s.addEventListener("click",(()=>{var l;l=c,e.arrayOfTodos.splice(l,1),localStorage.setItem("projects",JSON.stringify(t)),n?n&&"upcoming"==d?r():o():a(e)}));let p=document.createElement("div");l.appendChild(p),p.className="date",p.textContent=e.arrayOfTodos[c].date,n?n==c&&document.querySelector(".content").appendChild(l):document.querySelector(".content").appendChild(l)}n||l(e),localStorage.setItem("projects",JSON.stringify(t))}function c(e){e.name?document.querySelector(".project-name").textContent=e.name:document.querySelector(".project-name").textContent=e}function d(e){for(let n in t)if(t[n].name==e)return!0;return!1}function l(e){let t=document.createElement("button");document.querySelector(".create-button").appendChild(t),t.textContent="Create todo",t.className="create-button__btn",t.addEventListener("click",(()=>{!function(e){let t=document.querySelector(".popup-container");t.style.transform="scale(1)",document.body.addEventListener("click",(function(e){e.target==t&&(t.style.transform="scale(0)")})),document.querySelector(".submit-button").addEventListener("click",s,!1),document.querySelector(".submit-button").parameter=e}(e)}))}function s(e){let n=document.getElementById("taskname").value,o=document.getElementById("description").value,r=document.getElementById("date").value,c=document.getElementById("priority").value;if(n){let d=function(e,t,n,o){return{name:e,description:t,date:n,priority:o}}(n,o,r,c);e.currentTarget.parameter.arrayOfTodos.push(d),localStorage.setItem("projects",JSON.stringify(t)),document.querySelector(".popup-container").style.transform="scale(0)",a(e.currentTarget.parameter)}else alert("Enter task name")}"projects"in localStorage&&(t=JSON.parse(localStorage.getItem("projects")||[])),function(){c("Inbox");let n=new e("Inbox");0==t.filter((e=>"Inbox"==e.name)).length&&t.push(n);let o=l(n);n.arrayOfTodos.push(o),localStorage.setItem("projects",JSON.stringify(t)),t.filter((e=>"Inbox"==e.name)).length>0?a(t[0]):a(n),document.querySelector(".inbox").addEventListener("click",(()=>{console.log(t),t.filter((e=>"Inbox"==e.name)).length>0?a(t[0]):a(n)}))}(),n(),document.querySelector(".today").addEventListener("click",o),document.querySelector(".upcoming").addEventListener("click",r),document.querySelector(".projects__btn").addEventListener("click",(function o(){this.removeEventListener("click",o);var r=document.querySelector(".projects");let a=document.createElement("button");a.classList.add("projects__btn","projects__btn--close"),a.textContent="x",a.addEventListener("click",(()=>{r.removeChild(c),r.removeChild(s),r.removeChild(a),this.addEventListener("click",o)}));var c=document.createElement("input");c.setAttribute("type","text"),c.classList.add("projects__name-input"),r.appendChild(c);var s=document.createElement("button");a.classList.add("projects__btn","projects__btn--submit"),r.appendChild(a),r.appendChild(s),s.textContent="Ok",s.addEventListener("click",(()=>{let a=c.value;a&&a.length<16&&!d(a)?(r.removeChild(c),r.removeChild(s),document.querySelector(".create-button").textContent="",document.querySelector(".project-name").textContent=a,function(o){let r=new e(o);t.push(r),document.querySelector(".content").textContent="";let a=l(r);if(r.arrayOfTodos.push(a),localStorage.setItem("projects",JSON.stringify(t)),"Inbox"==o)return r;n()}(a),this.addEventListener("click",o)):1==d(a)?(alert("Project names should be different"),c.value=""):a.length>=16?alert("Project name should be less than 16 characters"):a||alert("Enter project name")}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,