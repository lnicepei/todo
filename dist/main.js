(()=>{"use strict";class e{constructor(e){this.name=e,this.arrayOfTodos=[]}}let t=[];function n(){document.querySelector(".projects").textContent="";for(let e=1;e<t.length;e++)if("Inbox"!==t[e].name){let n=document.createElement("div");n.className="project",document.querySelector(".projects").appendChild(n),n.textContent=t[e].name;let o=document.createElement("button");o.classList.add("project__btn"),o.textContent="x",o.addEventListener("click",(()=>{d(t[e])})),n.addEventListener("click",(()=>{c(t[e])})),n.appendChild(o)}}function o(){document.querySelector(".content").textContent="",document.querySelector(".create-button").textContent="";let e=document.createElement("div");e.className="today";let n=function(){let e=new Date,t=String(e.getDate()).padStart(2,"0"),n=String(e.getMonth()+1).padStart(2,"0"),o=e.getFullYear();return e=o+"-"+n+"-"+t,e}();a("Today");for(let e in t)for(let o=1;o<t[e].arrayOfTodos.length;o++)t[e].arrayOfTodos[o].date==n&&c(t[e],o);document.querySelector(".today").appendChild(e)}function r(){document.querySelector(".content").textContent="",document.querySelector(".create-button").textContent="";let e=document.createElement("div");e.className="upcoming";let n=new Date,o=String(n.getDate()).padStart(2,"0"),r=String(n.getMonth()+1).padStart(2,"0"),l=n.getFullYear();n=l+"/"+r+"/"+o,a("Upcoming");for(let e in t)for(let n=1;n<t[e].arrayOfTodos.length;n++)t[e].arrayOfTodos[n].date.substr(0,4)>l&&c(t[e],n,"upcoming"),t[e].arrayOfTodos[n].date.substr(0,4)==l&&t[e].arrayOfTodos[n].date.substr(5,2)>r&&c(t[e],n,"upcoming"),t[e].arrayOfTodos[n].date.substr(0,4)==l&&t[e].arrayOfTodos[n].date.substr(5,2)==r&&t[e].arrayOfTodos[n].date.substr(8,2)>o&&c(t[e],n,"upcoming");document.querySelector(".upcoming").appendChild(e)}function c(e,n,l){n||(document.querySelector(".content").textContent="",document.querySelector(".create-button").textContent="",a(e));for(let a=1;a<=e.arrayOfTodos.length-1;a++){let d=document.createElement("div");d.className="task";let s=document.createElement("div");s.textContent="",s.className="checkbox",d.appendChild(s);let u=document.createElement("div");u.textContent=e.arrayOfTodos[a].name,u.className="taskname",d.appendChild(u);let i=document.createElement("div");i.textContent="Project: "+e.name,i.className="father-project",d.appendChild(i);let m=document.createElement("div");m.textContent=e.arrayOfTodos[a].description,m.className="description",d.appendChild(m),1==e.arrayOfTodos[a].priority&&(s.style.background="red"),2==e.arrayOfTodos[a].priority&&(s.style.background="orange"),3==e.arrayOfTodos[a].priority&&(s.style.background="yellow"),0==e.arrayOfTodos[a].priority&&(s.style.background="white"),s.addEventListener("click",(()=>{var d;d=a,e.arrayOfTodos.splice(d,1),localStorage.setItem("projects",JSON.stringify(t)),n?n&&"upcoming"==l?r():o():c(e)}));let p=document.createElement("div");d.appendChild(p),p.className="date",p.textContent=e.arrayOfTodos[a].date,n?n==a&&document.querySelector(".content").appendChild(d):document.querySelector(".content").appendChild(d)}n||s(e),localStorage.setItem("projects",JSON.stringify(t))}function a(e){e.name?document.querySelector(".project-name").textContent=e.name:document.querySelector(".project-name").textContent=e}function l(e){for(let n=0;n<t.length;n++)if(t[n].name==e)return!1;return!0}function d(e){for(let n=0;n<t.length;n++)t[n]==e&&t.splice(n,1);localStorage.setItem("projects",JSON.stringify(t)),document.querySelector(".content").textContent="",document.querySelector(".create-button").textContent="",document.querySelector(".project-name").textContent="",n()}function s(e){let t=document.createElement("button");document.querySelector(".create-button").appendChild(t),t.textContent="Create todo",t.className="create-button__btn",t.addEventListener("click",(()=>{!function(e){let t=document.querySelector(".popup-container");t.style.transform="scale(1)",document.body.addEventListener("click",(function(e){e.target==t&&(t.style.transform="scale(0)")})),document.querySelector(".submit-button").addEventListener("click",u,!1),document.querySelector(".submit-button").parameter=e}(e)}))}function u(e){let n=document.getElementById("taskname").value,o=document.getElementById("description").value,r=document.getElementById("date").value,a=document.getElementById("priority").value;if(n){let l=function(e,t,n,o){return{name:e,description:t,date:n,priority:o}}(n,o,r,a);e.currentTarget.parameter.arrayOfTodos.push(l),localStorage.setItem("projects",JSON.stringify(t)),document.querySelector(".popup-container").style.transform="scale(0)",c(e.currentTarget.parameter)}else alert("Enter task name")}"projects"in localStorage&&(t=JSON.parse(localStorage.getItem("projects")||[]),n()),function(){let n=new e("Inbox");console.log(l(n)),document.querySelector(".inbox").addEventListener("click",(()=>{c(n),a("Inbox")})),t.push(n);let o=s(n);n.arrayOfTodos.push(o),localStorage.setItem("projects",JSON.stringify(t)),console.log(t),c(n)}(),document.querySelector(".today").addEventListener("click",o),document.querySelector(".upcoming").addEventListener("click",r),document.querySelector(".projects__btn").addEventListener("click",(function o(){this.removeEventListener("click",o);var r=document.querySelector(".projects");let c=document.createElement("button");c.classList.add("projects__btn","projects__btn--close"),c.textContent="x",c.addEventListener("click",(()=>{r.removeChild(a),r.removeChild(d),r.removeChild(c),this.addEventListener("click",o)}));var a=document.createElement("input");a.setAttribute("type","text"),a.classList.add("projects__name-input"),r.appendChild(a);var d=document.createElement("button");c.classList.add("projects__btn","projects__btn--submit"),r.appendChild(c),r.appendChild(d),d.textContent="Ok",d.addEventListener("click",(()=>{let c=a.value;c&&c.length<16&&l(c)?(r.removeChild(a),r.removeChild(d),document.querySelector(".create-button").textContent="",document.querySelector(".project-name").textContent=c,function(o){let r=new e(o);t.push(r),document.querySelector(".content").textContent="";let c=s(r);r.arrayOfTodos.push(c),localStorage.setItem("projects",JSON.stringify(t)),n()}(c),this.addEventListener("click",o)):0==l(c)?(alert("Project names should be different"),a.value=""):c.length>=16?alert("Project name should be less than 16 characters"):c||alert("Enter project name")}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,