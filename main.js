(()=>{"use strict";class e{constructor(e){this.name=e,this.arrayOfTodos=[]}}let t=[];function n(n){let r=new e(n);t.push(r),document.querySelector(".content").textContent="";let c=s(r);if(r.arrayOfTodos.push(c),"Inbox"!==n&&localStorage.setItem("projects",JSON.stringify(t)),"Inbox"==n)return r;o()}function o(e){document.querySelector(".projects").textContent="",t.forEach((n=>{let r=document.createElement("div");r.className="project",r.textContent=n.name;let c=document.createElement("button");c.classList.add("project__btn"),c.textContent="x",c.addEventListener("click",(()=>{var e;e=n,t=t.filter((t=>t!==e)),localStorage.setItem("projects",JSON.stringify(t)),console.log(t),o(1),document.querySelector(".content").textContent=""})),r.addEventListener("click",(()=>{e||a(n),e||console.log("no index")})),r.appendChild(c),"Inbox"!==n.name&&document.querySelector(".projects").appendChild(r)}))}function r(){document.querySelector(".content").textContent="",document.querySelector(".create-button").textContent="";let e=document.createElement("div");e.className="today";let n=function(){let e=new Date,t=String(e.getDate()).padStart(2,"0"),n=String(e.getMonth()+1).padStart(2,"0"),o=e.getFullYear();return e=o+"-"+n+"-"+t,e}();d("Today"),t.forEach((e=>{for(let t=1;t<e.arrayOfTodos.length;t++)e.arrayOfTodos[t].date==n&&a(e,t)})),document.querySelector(".today").appendChild(e)}function c(){document.querySelector(".content").textContent="",document.querySelector(".create-button").textContent="";let e=document.createElement("div");e.className="upcoming";let n=new Date,o=String(n.getDate()).padStart(2,"0"),r=String(n.getMonth()+1).padStart(2,"0"),c=n.getFullYear();n=c+"/"+r+"/"+o,d("Upcoming");for(let e in t)for(let n=1;n<t[e].arrayOfTodos.length;n++)t[e].arrayOfTodos[n].date.substr(0,4)>c&&a(t[e],n,"upcoming"),t[e].arrayOfTodos[n].date.substr(0,4)==c&&t[e].arrayOfTodos[n].date.substr(5,2)>r&&a(t[e],n,"upcoming"),t[e].arrayOfTodos[n].date.substr(0,4)==c&&t[e].arrayOfTodos[n].date.substr(5,2)==r&&t[e].arrayOfTodos[n].date.substr(8,2)>o&&a(t[e],n,"upcoming");document.querySelector(".upcoming").appendChild(e)}function a(e,n,o){n||(document.querySelector(".content").textContent="",document.querySelector(".create-button").textContent="",d(e)),console.log(e);for(let d=1;d<e.arrayOfTodos.length;d++){let l=document.createElement("div");l.className="task";let s=document.createElement("div");s.textContent="",s.className="checkbox",l.appendChild(s);let u=document.createElement("div");u.textContent=e.arrayOfTodos[d].name,u.className="taskname",l.appendChild(u);let i=document.createElement("div");i.textContent="Project: "+e.name,i.className="father-project",l.appendChild(i);let m=document.createElement("div");m.textContent=e.arrayOfTodos[d].description,m.className="description",l.appendChild(m),1==e.arrayOfTodos[d].priority&&(s.style.background="red"),2==e.arrayOfTodos[d].priority&&(s.style.background="orange"),3==e.arrayOfTodos[d].priority&&(s.style.background="yellow"),0==e.arrayOfTodos[d].priority&&(s.style.background="white"),s.addEventListener("click",(()=>{var l;l=d,e.arrayOfTodos.splice(l,1),localStorage.setItem("projects",JSON.stringify(t)),n?n&&"upcoming"==o?c():r():a(e)}));let p=document.createElement("div");l.appendChild(p),p.className="date",p.textContent=e.arrayOfTodos[d].date,n?n==d&&document.querySelector(".content").appendChild(l):document.querySelector(".content").appendChild(l)}n||s(e),localStorage.setItem("projects",JSON.stringify(t))}function d(e){e.name?document.querySelector(".project-name").textContent=e.name:document.querySelector(".project-name").textContent=e}function l(e){return t.forEach((t=>{if(t.name==e)return!0})),!1}function s(e){let t=document.createElement("button");document.querySelector(".create-button").appendChild(t),t.textContent="Create todo",t.className="create-button__btn",t.addEventListener("click",(()=>{!function(e){let t=document.querySelector(".popup-container");t.style.transform="scale(1)",document.body.addEventListener("click",(function(e){e.target==t&&(t.style.transform="scale(0)")})),document.querySelector(".submit-button").addEventListener("click",u,!1),document.querySelector(".submit-button").parameter=e}(e)}))}function u(e){let n=document.getElementById("taskname").value,o=document.getElementById("description").value,r=document.getElementById("date").value,c=document.getElementById("priority").value;if(n){let d=function(e,t,n,o){return{name:e,description:t,date:n,priority:o}}(n,o,r,c);e.currentTarget.parameter.arrayOfTodos.push(d),localStorage.setItem("projects",JSON.stringify(t)),document.querySelector(".popup-container").style.transform="scale(0)",a(e.currentTarget.parameter)}else alert("Enter task name")}console.log(t),localStorage,function(){d("Inbox"),l();let e=n("Inbox");document.querySelector(".inbox").addEventListener("click",(()=>{a(e)}))}(),o(),document.querySelector(".today").addEventListener("click",r),document.querySelector(".upcoming").addEventListener("click",c),document.querySelector(".projects__btn").addEventListener("click",(function e(){this.removeEventListener("click",e);var t=document.querySelector(".projects");let o=document.createElement("button");o.classList.add("projects__btn","projects__btn--close"),o.textContent="x",o.addEventListener("click",(()=>{t.removeChild(r),t.removeChild(c),t.removeChild(o),this.addEventListener("click",e)}));var r=document.createElement("input");r.setAttribute("type","text"),r.classList.add("projects__name-input"),t.appendChild(r);var c=document.createElement("button");o.classList.add("projects__btn","projects__btn--submit"),t.appendChild(o),t.appendChild(c),c.textContent="Ok",c.addEventListener("click",(()=>{let o=r.value;o&&o.length<16&&!l(o)?(t.removeChild(r),t.removeChild(c),document.querySelector(".create-button").textContent="",document.querySelector(".project-name").textContent=o,n(o),this.addEventListener("click",e)):1==l(o)?(alert("Project names should be different"),r.value=""):o.length>=16?alert("Project name should be less than 16 characters"):o||alert("Enter project name")}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,